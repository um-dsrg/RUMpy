experiment = "rcan_celeba_hq"  # experiment name
experiment_save_loc = '../../../Results/SISR'  # experiment save location

[data]
batch_size = 2  # data batch size
dataloader_threads = 8  # parallel threads to use to speed up data processing

[data.training_sets]
[data.training_sets.data_1]
name = 'celeba_hq'
lr = '../../../Data/celeba-hq/lr_blurred'
lr_interp = 'N/A'  # low res data pre-scaled using bicubic interpolation
hr = '../../../Data/celeba-hq/hr_superres'
degradation_metadata = 'on_site'
metadata = ['blur_kernel']
random_augment = true
image_shortlist = '../../../Data/celeba-hq/data_splits/celeba_hq_train_splits.csv'

[data.eval_sets]
[data.eval_sets.data_1]
name = 'celeba_hq'
lr = '../../../Data/celeba-hq/lr_blurred'
lr_interp = 'N/A'  # low res data pre-scaled using bicubic interpolation
hr = '../../../Data/celeba-hq/hr_superres'
degradation_metadata = 'on_site'
metadata=['blur_kernel']
image_shortlist = '../../../Data/celeba-hq/data_splits/celeba_hq_eval_splits.csv'

[model]
name = 'rcan'  # model architecture name
[model.internal_params] # parameters specific for each model
scale = 4 # super resolution scale factor
lr = 1e-4 # learning rate

scheduler = 'cosine_annealing_warm_restarts'
[model.internal_params.scheduler_params]
t_mult = 1  # no change in LR throughout training
restart_period = 125000  # number of batches for restart to occcur
lr_min = 1e-7  # minimum learning rate

[training]
gpu = 'single' # one of multi, single, off
sp_gpu = 0 # inital gpu to use
seed = 8  # random seed
num_epochs = 50  # epochs requested
metrics = ['PSNR', 'SSIM']  # metrics to calculate on validation set
id_source = 'standard'  # location of ids to use for face recognition metrics
logging = 'visual' # one of visual or text
