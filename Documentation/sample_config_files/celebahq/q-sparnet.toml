experiment = "qsparnet"  # experiment name
experiment_save_loc = '../../../Results/SISR'  # experiment save location

[data]
batch_size = 2  # data batch size
dataloader_threads = 5  # parallel threads to use to speed up data processing

[data.training_sets]
[data.training_sets.data_1]
name = 'celeba_hq'
lr = '../../../Data/celeba-hq/lr_blurred_interp'
hr = '../../../Data/celeba-hq/hr_superres'
degradation_metadata = 'on_site'
metadata = ['blur_kernel']
random_augment = true
image_shortlist = '../../../Data/celeba-hq/data_splits/celeba_hq_train_splits.csv'

[data.eval_sets]
[data.eval_sets.data_1]
name = 'celeba_hq'
lr = '../../../Data/celeba-hq/lr_blurred_interp'
hr = '../../../Data/celeba-hq/hr_superres'
degradation_metadata = 'on_site'
metadata=['blur_kernel']
image_shortlist = '../../../Data/celeba-hq/data_splits/celeba_hq_eval_splits.csv'

[model]
name = 'qsparnet'  # model architecture name
[model.internal_params] # parameters specific for each model
scale = 4 # super resolution scale factor
lr = 2e-4 # learning rate
metadata = ['blur_kernel']

[training]
gpu = 'single' # one of multi, single, off
sp_gpu = 0 # inital gpu to use
seed = 8  # random seed
num_epochs = 50  # epochs requested
metrics = ['PSNR', 'SSIM']  # metrics to calculate on validation set
logging = 'visual' # one of visual or text
